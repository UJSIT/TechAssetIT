@model slbfeHardware.Models.ChangePasswordModel

@{
    ViewBag.Title = "Change Password";
    Layout = null;
}





<!DOCTYPE html>
<html lang="en">
<head>
    <title>@ViewBag.Title</title>


    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="@Url.Content("~/Content/Mylayout/plugins/fontawesome-free/css/all.min.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/Mylayout/dist/css/adminlte.min.css")" rel="stylesheet" type="text/css" />

</head>
<body class="hold-transition login-page">
    <form action="@Url.Action("ChangePassword", "Account")" method="post">
        @Html.ValidationSummary(true)
        <center>
            <div class="login-box">
                <div class="card card-outline card-info">
                    <br />

                    <div class="card-header text-center">
                        <center>
                            <a href="@Url.Action("UserLogin", "Account")" class="text-center">
                                <img class="" src="@Url.Content("~/Content/Mylayout/dist/img/TechAssets.png")" alt="Logo" height="50%" width="60%" />
                            </a>
                        </center>
                        <br />
                    </div>



                    <div class="card-body">

                        <h6>
                            Change Password
                        </h6>





                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        @if (ViewBag.ErrorMessages != null)
                        {
                            <div class="text-danger">
                                <ul>
                                    @foreach (var errorMessage in ViewBag.ErrorMessages)
                                    {
                                        <li>@errorMessage</li>
                                    }
                                </ul>
                            </div>
                        }

                        <hr />



                        <div class="input-group mb-3">
                            @Html.TextBoxFor(m => m.EmpNo, new { @class = "form-control", placeholder = "Employee Number", required = "required" })

                            <div class="input-group-append">
                                <div class="input-group-text">
                                    <span class="fas fa-user"></span>
                                </div>
                            </div>
                            @Html.ValidationMessageFor(m => m.EmpNo, "", new { @class = "text-danger" })
                        </div>
                        <div class="input-group mb-3">
                            @Html.PasswordFor(m => m.ExistingPassword, new { @class = "form-control", placeholder = "Existing Password", required = "required" })

                            <div class="input-group-append">
                                <div class="input-group-text">
                                    <span class="fas fa-lock"></span>
                                </div>
                            </div>
                            @Html.ValidationMessageFor(m => m.ExistingPassword, "", new { @class = "text-danger" })
                        </div>
                        <div class="input-group mb-3">
                            @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control", placeholder = "New Password", required = "required" })

                            <div class="input-group-append">
                                <div class="input-group-text">
                                    <span class="fas fa-lock"></span>
                                </div>
                            </div>
                            @Html.ValidationMessageFor(m => m.NewPassword, "", new { @class = "text-danger" })
                        </div>
                        <div class="input-group mb-3">

                            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = " form-control", placeholder = "Confirm Password", required = "required" })

                            <div class="input-group-append">
                                <div class="input-group-text">
                                    <span class="fas fa-lock"></span>
                                </div>
                            </div>
                            @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                        </div>




                        <div class="row">
                            <div class="col-12">
                                <button type="submit" class="btn btn-info btn-block">Change Password</button>
                            </div>

                            <div class="col-12">

                                <hr />
                                <center>
                                    <strong><a href="">TechAssets</a> &copy; 2024 <a href="">SLBFE IT</a></strong>
                                    <br />
                                    <b>Version</b> 1.0
                                </center>
                            </div>



                        </div>


                    </div>

                </div>


            </div>



        </center>
    </form>


    <script src="@Url.Content("~/Content/Mylayout/plugins/jquery/jquery.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/Mylayout/plugins/bootstrap/js/bootstrap.bundle.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/Mylayout/dist/js/adminlte.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/Mylayout/dist/js/cnofification.js")" type="text/javascript"></script>

    <script>

        function hideAlerts() {
            const alerts = document.querySelectorAll('.text-danger');
            alerts.forEach(alert => {
                if (alert.innerHTML.trim() !== '') {
                    setTimeout(() => {
                        alert.style.display = 'none';
                    }, 5000);
                }
            });
        }

        window.onload = hideAlerts;
    </script>

</body>
</html>











